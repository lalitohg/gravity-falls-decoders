var gravityFallsDecoders;(()=>{"use strict";var e={87:function(e,t,r){var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},i=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,u=o.length;a<u;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.A1Z26=void 0;var o=r(225),a=function(e,t,r,i){var o;return n(n({},e),((o={})[t]=""+(r+1),o))},u=function(e,t,r,i){var o;return n(n({},e),((o={})[""+(r+1)]=t,o))},p=function(){function e(e){var t=this;void 0===e&&(e=o.defaultAlphabet),this._tokenSpacer="-",this._encryptStringReducer=function(e,r,n,i){var o=t._encryptMap[r];return o?""+e+(n>0&&t._encryptMap[i[n-1]]?t._tokenSpacer:"")+o:""+e+r},this._decryptStringReducer=function(e,r){var n=t._decryptMap[r];return n?""+e+n:""+e+(r!==t._tokenSpacer?r:"")},this._alphabet=e.map((function(e){return e.toLowerCase()})),this._encryptMap=this._alphabet.reduce(a,{}),this._decryptMap=this._alphabet.reduce(u,{})}return e.prototype._getParsedTokens=function(e){for(var t=[],r=/[0-9]/,n=e.toLowerCase().split(""),i=0,o="";i<n.length;i++)r.test(n[i])?o+=n[i]:(t.push(o),n[i]!==this._tokenSpacer&&t.push(n[i]),o="");return o&&t.push(o),t},Object.defineProperty(e.prototype,"alphabet",{get:function(){return i(this._alphabet)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"encryptMap",{get:function(){return n({},this._encryptMap)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"decryptMap",{get:function(){return n({},this._decryptMap)},enumerable:!1,configurable:!0}),e.prototype.encryptString=function(e){return e.toLowerCase().split("").reduce(this._encryptStringReducer,"")},e.prototype.decryptString=function(e){return this._getParsedTokens(e).reduce(this._decryptStringReducer,"")},e}();t.A1Z26=p},187:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(87),t)},463:function(e,t,r){var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},i=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,u=o.length;a<u;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.Atbash=void 0;var o=r(225),a=function(e,t,r,i){var o;return n(n({},e),((o={})[t]=i[i.length-1-r],o))},u=function(){function e(e){void 0===e&&(e=o.defaultAlphabet),this._alphabet=e.map((function(e){return e.toLowerCase()})),this._encryptMap=this._alphabet.reduce(a,{}),this._decryptMap=i(this._alphabet).reverse().reduce(a,{})}return Object.defineProperty(e.prototype,"alphabet",{get:function(){return i(this._alphabet)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"encryptMap",{get:function(){return n({},this._encryptMap)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"decryptMap",{get:function(){return n({},this._decryptMap)},enumerable:!1,configurable:!0}),e.prototype.encryptString=function(e){var t=this;return e.toLowerCase().split("").reduce((function(e,r){return t.encryptMap[r]?e+=t.encryptMap[r]:e+=r}),"")},e.prototype.decryptString=function(e){var t=this;return e.toLowerCase().split("").reduce((function(e,r){return t.decryptMap[r]?e+=t.decryptMap[r]:e+=r}),"")},e}();t.Atbash=u},739:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(463),t)},479:function(e,t,r){var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},i=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,u=o.length;a<u;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.Caesar=void 0;var o=r(225),a=r(225),u=function(e,t){return a.getRotateNTokenAtIndex(e,t,3)},p=function(e,t,r,i){var o;return n(n({},e),((o={})[t]=u(r,i),o))},c=function(e,t,r,i){var o;return n(n({},e),((o={})[u(r,i)]=t,o))},s=function(){function e(e){void 0===e&&(e=o.defaultAlphabet),this._alphabet=e.length>3?e.map((function(e){return e.toLowerCase()})):o.defaultAlphabet,this._encryptMap=this._alphabet.reduce(p,{}),this._decryptMap=this._alphabet.reduce(c,{})}return Object.defineProperty(e.prototype,"alphabet",{get:function(){return i(this._alphabet)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"encryptMap",{get:function(){return n({},this._encryptMap)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"decryptMap",{get:function(){return n({},this._decryptMap)},enumerable:!1,configurable:!0}),e.prototype.encryptString=function(e){var t=this;return e.toLowerCase().split("").reduce((function(e,r){return t.encryptMap[r]?e+=t.encryptMap[r]:e+=r}),"")},e.prototype.decryptString=function(e){var t=this;return e.toLowerCase().split("").reduce((function(e,r){return t.decryptMap[r]?e+=t.decryptMap[r]:e+=r}),"")},e}();t.Caesar=s},819:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(479),t)},972:function(e,t,r){var n=this&&this.__assign||function(){return(n=Object.assign||function(e){for(var t,r=1,n=arguments.length;r<n;r++)for(var i in t=arguments[r])Object.prototype.hasOwnProperty.call(t,i)&&(e[i]=t[i]);return e}).apply(this,arguments)},i=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,u=o.length;a<u;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.Viginere=void 0;var o=r(225);function a(e,t,r,n){return e.encryptMap[t]={},e.decryptMap[t]={},n.forEach((function(i,a){e.encryptMap[t][i]=o.getRotateNTokenAtIndex(a,n,r),e.decryptMap[t][o.getRotateNTokenAtIndex(a,n,r)]=i})),e}var u=function(){function e(e){void 0===e&&(e=o.defaultAlphabet),this._alphabet=e?e.map((function(e){return e.toLowerCase()})):o.defaultAlphabet,this._generateMaps()}return e.prototype._generateMaps=function(){var e=this._alphabet.reduce(a,{encryptMap:{},decryptMap:{}});this._encryptMap=e.encryptMap,this._decryptMap=e.decryptMap},e.prototype.inputsAreValid=function(e,t){return!(!e||!t)&&""!==e&&""!==t},e.prototype.cleanMessage=function(e){return e.toLocaleLowerCase()},Object.defineProperty(e.prototype,"alphabet",{get:function(){return i(this._alphabet)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"encryptMap",{get:function(){return n({},this._encryptMap)},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"decryptMap",{get:function(){return n({},this._decryptMap)},enumerable:!1,configurable:!0}),e.prototype.encryptString=function(e,t){var r=this;if(!this.inputsAreValid(e,t))return"";e=this.cleanMessage(e);var n=o.CircularList.fromString(t.toLocaleLowerCase());return e.split("").map((function(e){if(r.alphabet.includes(e)){var t=n.value;return n.next,r.encryptMap[t][e]}return e})).join("")},e.prototype.decryptString=function(e,t){var r=this;if(!this.inputsAreValid(e,t))return"";e=this.cleanMessage(e);var n=o.CircularList.fromString(t.toLocaleLowerCase());return e.split("").map((function(e){if(r.alphabet.includes(e)){var t=n.value;return n.next,r.decryptMap[t][e]}return e})).join("")},e}();t.Viginere=u},926:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)};Object.defineProperty(t,"__esModule",{value:!0}),i(r(972),t)},641:function(e,t){var r=this&&this.__spreadArrays||function(){for(var e=0,t=0,r=arguments.length;t<r;t++)e+=arguments[t].length;var n=Array(e),i=0;for(t=0;t<r;t++)for(var o=arguments[t],a=0,u=o.length;a<u;a++,i++)n[i]=o[a];return n};Object.defineProperty(t,"__esModule",{value:!0}),t.CircularList=void 0;var n=function(){function e(){this._elements=[],this._header=-1}return e.fromString=function(t){return e.fromArray(t.split(""))},e.fromArray=function(t){if(t.length<1)return new e;var r=new e;return t.forEach((function(e){return r.add(e)})),r.resetHeader(),r},e.prototype.isEmpty=function(){return 0===this._elements.length},e.prototype.resetHeader=function(){this.isEmpty()||(this._header=0)},Object.defineProperty(e.prototype,"first",{get:function(){return this.isEmpty()?void 0:this._elements[0]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"last",{get:function(){return this.isEmpty()?void 0:this._elements[this._elements.length-1]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"value",{get:function(){return this.isEmpty()?void 0:this.elements[this._header]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"next",{get:function(){return this.isEmpty()?void 0:this._header===this._elements.length-1?(this.resetHeader(),this.first):this._elements[++this._header]},enumerable:!1,configurable:!0}),Object.defineProperty(e.prototype,"elements",{get:function(){return r(this._elements)},enumerable:!1,configurable:!0}),e.prototype.add=function(e){this._elements.push(e),this._header=this._elements.length-1},e}();t.CircularList=n},998:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.getRotateNTokenAtIndex=void 0,t.getRotateNTokenAtIndex=function(e,t,r){return e>=t.length||r>=t.length?"":e<t.length-r?t[e+r]:t[e-(t.length-r)]}},800:(e,t)=>{Object.defineProperty(t,"__esModule",{value:!0}),t.default=["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]},225:function(e,t,r){var n=this&&this.__createBinding||(Object.create?function(e,t,r,n){void 0===n&&(n=r),Object.defineProperty(e,n,{enumerable:!0,get:function(){return t[r]}})}:function(e,t,r,n){void 0===n&&(n=r),e[n]=t[r]}),i=this&&this.__exportStar||function(e,t){for(var r in e)"default"===r||t.hasOwnProperty(r)||n(t,e,r)},o=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,"__esModule",{value:!0}),t.defaultAlphabet=void 0;var a=o(r(800));t.defaultAlphabet=a.default,i(r(998),t),i(r(641),t)}},t={};function r(n){var i=t[n];if(void 0!==i)return i.exports;var o=t[n]={exports:{}};return e[n].call(o.exports,o,o.exports,r),o.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.Viginere=e.A1Z26=e.Atbash=e.Caesar=void 0;var t=r(819);Object.defineProperty(e,"Caesar",{enumerable:!0,get:function(){return t.Caesar}});var i=r(739);Object.defineProperty(e,"Atbash",{enumerable:!0,get:function(){return i.Atbash}});var o=r(187);Object.defineProperty(e,"A1Z26",{enumerable:!0,get:function(){return o.A1Z26}});var a=r(926);Object.defineProperty(e,"Viginere",{enumerable:!0,get:function(){return a.Viginere}})})(),gravityFallsDecoders=n})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,